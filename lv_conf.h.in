/**
 * @file lv_conf.h
 * Configuration file for v8.4.0
 */

/*
 * Copy this file as `lv_conf.h`
 * 1. simply next to the `lvgl` folder
 * 2. or any other places and
 *    - define `LV_CONF_INCLUDE_SIMPLE`
 *    - add the path as include path
 */

/* clang-format off */
#if 1 /*Set it to "1" to enable content*/

#ifndef LV_CONF_H
#define LV_CONF_H

#include <stdint.h>

/*====================
   COLOR SETTINGS
 *====================*/

/*Color depth: 1 (1 byte per pixel), 8 (RGB332), 16 (RGB565), 32 (ARGB8888)*/
#define LV_COLOR_DEPTH @BR2_LV_COLOR_DEPTH@

/*Swap the 2 bytes of RGB565 color. Useful if the display has an 8-bit interface (e.g. SPI)*/
#define LV_COLOR_16_SWAP @BR2_LV_COLOR_16_SWAP@

/*Enable features to draw on transparent background.
 *It's required if opa, and transform_* style properties are used.
 *Can be also used if the UI is above another layer, e.g. an OSD menu or video player.*/
#define LV_COLOR_SCREEN_TRANSP @BR2_LV_COLOR_SCREEN_TRANSP@

/* Adjust color mix functions rounding. GPUs might calculate color mix (blending) differently.
 * 0: round down, 64: round up from x.75, 128: round up from half, 192: round up from x.25, 254: round up */
#define LV_COLOR_MIX_ROUND_OFS @BR2_LV_COLOR_MIX_ROUND_OFS@

/*Images pixels with this color will not be drawn if they are chroma keyed)*/
#define LV_COLOR_CHROMA_KEY lv_color_hex(@BR2_LV_COLOR_CHROMA_KEY_HEX@)         /*pure green*/

/*=========================
   MEMORY SETTINGS
 *=========================*/

/*1: use custom malloc/free, 0: use the built-in `lv_mem_alloc()` and `lv_mem_free()`*/
#define LV_MEM_CUSTOM @BR2_LV_MEM_CUSTOM@
#if LV_MEM_CUSTOM == 0
    /*Size of the memory available for `lv_mem_alloc()` in bytes (>= 2kB)*/
    #define LV_MEM_SIZE @BR2_LV_MEM_SIZE@          /*[bytes]*/

    /*Set an address for the memory pool instead of allocating it as a normal array. Can be in external SRAM too.*/
    #define LV_MEM_ADR @BR2_LV_MEM_ADR@     /*0: unused*/
    /*Instead of an address give a memory allocator that will be called to get a memory pool for LVGL. E.g. my_malloc*/
    #if LV_MEM_ADR == 0
        #undef LV_MEM_POOL_INCLUDE
        #undef LV_MEM_POOL_ALLOC
    #endif

#else       /*LV_MEM_CUSTOM*/
    #define LV_MEM_CUSTOM_INCLUDE @BR2_LV_MEM_CUSTOM_INCLUDE@   /*Header for the dynamic memory function*/
    #define LV_MEM_CUSTOM_ALLOC   malloc
    #define LV_MEM_CUSTOM_FREE    free
    #define LV_MEM_CUSTOM_REALLOC realloc
#endif     /*LV_MEM_CUSTOM*/

/*Number of the intermediate memory buffer used during rendering and other internal processing mechanisms.
 *You will see an error log message if there wasn't enough buffers. */
#define LV_MEM_BUF_MAX_NUM @BR2_LV_MEM_BUF_MAX_NUM@

/*Use the standard `memcpy` and `memset` instead of LVGL's own functions. (Might or might not be faster).*/
#define LV_MEMCPY_MEMSET_STD @BR2_LV_MEMCPY_MEMSET_STD@

/*====================
   HAL SETTINGS
 *====================*/

/*Default display refresh period. LVG will redraw changed areas with this period time*/
#define LV_DISP_DEF_REFR_PERIOD @BR2_LV_DEF_REFR_PERIOD@      /*[ms]*/

/*Input device read period in milliseconds*/
#define LV_INDEV_DEF_READ_PERIOD @BR2_LV_INDEV_DEF_READ_PERIOD@     /*[ms]*/

/*Use a custom tick source that tells the elapsed time in milliseconds.
 *It removes the need to manually update the tick with `lv_tick_inc()`)*/
#define LV_TICK_CUSTOM @BR2_LV_TICK_CUSTOM@
#if LV_TICK_CUSTOM
    #define LV_TICK_CUSTOM_INCLUDE @BR2_LV_TICK_CUSTOM_INCLUDE@         /*Header for the system time function*/
    #define LV_TICK_CUSTOM_SYS_TIME_EXPR (lv_systick())    /*Expression evaluating to current system time in ms*/
#endif   /*LV_TICK_CUSTOM*/

/*Default Dot Per Inch. Used to initialize default sizes such as widgets sized, style paddings.
 *(Not so important, you can adjust it to modify default sizes and spaces)*/
#define LV_DPI_DEF @BR2_LV_DPI_DEF@     /*[px/inch]*/

/*=======================
 * FEATURE CONFIGURATION
 *=======================*/

/*-------------
 * Drawing
 *-----------*/

/*Enable complex draw engine.
 *Required to draw shadow, gradient, rounded corners, circles, arc, skew lines, image transformations or any masks*/
#define LV_DRAW_COMPLEX @BR2_LV_DRAW_COMPLEX@
#if LV_DRAW_COMPLEX != 0

    /*Allow buffering some shadow calculation.
    *LV_SHADOW_CACHE_SIZE is the max. shadow size to buffer, where shadow size is `shadow_width + radius`
    *Caching has LV_SHADOW_CACHE_SIZE^2 RAM cost*/
    #define LV_SHADOW_CACHE_SIZE @BR2_LV_SHADOW_CACHE_SIZE@

    /* Set number of maximally cached circle data.
    * The circumference of 1/4 circle are saved for anti-aliasing
    * radius * 4 bytes are used per circle (the most often used radiuses are saved)
    * 0: to disable caching */
    #define LV_CIRCLE_CACHE_SIZE @BR2_LV_CIRCLE_CACHE_SIZE@
#endif /*LV_DRAW_COMPLEX*/

/**
 * "Simple layers" are used when a widget has `style_opa < 255` to buffer the widget into a layer
 * and blend it as an image with the given opacity.
 * Note that `bg_opa`, `text_opa` etc don't require buffering into layer)
 * The widget can be buffered in smaller chunks to avoid using large buffers.
 *
 * - LV_LAYER_SIMPLE_BUF_SIZE: [bytes] the optimal target buffer size. LVGL will try to allocate it
 * - LV_LAYER_SIMPLE_FALLBACK_BUF_SIZE: [bytes]  used if `LV_LAYER_SIMPLE_BUF_SIZE` couldn't be allocated.
 *
 * Both buffer sizes are in bytes.
 * "Transformed layers" (where transform_angle/zoom properties are used) use larger buffers
 * and can't be drawn in chunks. So these settings affects only widgets with opacity.
 */
#define LV_LAYER_SIMPLE_BUF_SIZE          @BR2_LV_LAYER_SIMPLE_BUF_SIZE@
#define LV_LAYER_SIMPLE_FALLBACK_BUF_SIZE @BR2_LV_LAYER_SIMPLE_FALLBACK_BUF_SIZE@

/*Default image cache size. Image caching keeps the images opened.
 *If only the built-in image formats are used there is no real advantage of caching. (I.e. if no new image decoder is added)
 *With complex image decoders (e.g. PNG or JPG) caching can save the continuous open/decode of images.
 *However the opened images might consume additional RAM.
 *0: to disable caching*/
#define LV_IMG_CACHE_DEF_SIZE @BR2_LV_IMG_CACHE_DEF_SIZE@

/*Number of stops allowed per gradient. Increase this to allow more stops.
 *This adds (sizeof(lv_color_t) + 1) bytes per additional stop*/
#define LV_GRADIENT_MAX_STOPS @BR2_LV_GRADIENT_MAX_STOPS@

/*Default gradient buffer size.
 *When LVGL calculates the gradient "maps" it can save them into a cache to avoid calculating them again.
 *LV_GRAD_CACHE_DEF_SIZE sets the size of this cache in bytes.
 *If the cache is too small the map will be allocated only while it's required for the drawing.
 *0 mean no caching.*/
#define LV_GRAD_CACHE_DEF_SIZE @BR2_LV_GRAD_CACHE_DEF_SIZE@

/*Allow dithering the gradients (to achieve visual smooth color gradients on limited color depth display)
 *LV_DITHER_GRADIENT implies allocating one or two more lines of the object's rendering surface
 *The increase in memory consumption is (32 bits * object width) plus 24 bits * object width if using error diffusion */
#define LV_DITHER_GRADIENT @BR2_LV_DITHER_GRADIENT@
#if LV_DITHER_GRADIENT
    /*Add support for error diffusion dithering.
     *Error diffusion dithering gets a much better visual result, but implies more CPU consumption and memory when drawing.
     *The increase in memory consumption is (24 bits * object's width)*/
    #define LV_DITHER_ERROR_DIFFUSION @BR2_LV_DITHER_ERROR_DIFFUSION@
#endif

/*Maximum buffer size to allocate for rotation.
 *Only used if software rotation is enabled in the display driver.*/
#define LV_DISP_ROT_MAX_BUF @BR2_LV_DISP_ROT_MAX_BUF@

/*-------------
 * GPU
 *-----------*/

/*Use Arm's 2D acceleration library Arm-2D */
#define LV_USE_GPU_ARM2D @BR2_LV_USE_GPU_ARM2D@

/*Use SDL renderer API*/
#define LV_USE_GPU_SDL @BR2_LV_USE_GPU_SDL@
#if LV_USE_GPU_SDL
    #define LV_GPU_SDL_INCLUDE_PATH @BR2_LV_GPU_SDL_INCLUDE_PATH@
    /*Texture cache size, 8MB by default*/
    #define LV_GPU_SDL_LRU_SIZE @BR2_LV_GPU_SDL_LRU_SIZE@
    /*Custom blend mode for mask drawing, disable if you need to link with older SDL2 lib*/
    #define LV_GPU_SDL_CUSTOM_BLEND_MODE (SDL_VERSION_ATLEAST(2, 0, 6))
#endif

/*-------------
 * Logging
 *-----------*/

/*Enable the log module*/
#define LV_USE_LOG @BR2_LV_USE_LOG@
#if LV_USE_LOG

    /*How important log should be added:
    *LV_LOG_LEVEL_TRACE       A lot of logs to give detailed information
    *LV_LOG_LEVEL_INFO        Log important events
    *LV_LOG_LEVEL_WARN        Log if something unwanted happened but didn't cause a problem
    *LV_LOG_LEVEL_ERROR       Only critical issue, when the system may fail
    *LV_LOG_LEVEL_USER        Only logs added by the user
    *LV_LOG_LEVEL_NONE        Do not log anything*/
    #define LV_LOG_LEVEL @BR2_LV_LOG_LEVEL@

    /*1: Print the log with 'printf';
    *0: User need to register a callback with `lv_log_register_print_cb()`*/
    #define LV_LOG_PRINTF @BR2_LV_LOG_PRINTF@

    /*Enable/disable LV_LOG_TRACE in modules that produces a huge number of logs*/
    #define LV_LOG_TRACE_MEM        @BR2_LV_LOG_TRACE_MEM@
    #define LV_LOG_TRACE_TIMER      @BR2_LV_LOG_TRACE_TIMER@
    #define LV_LOG_TRACE_INDEV      @BR2_LV_LOG_TRACE_INDEV@
    #define LV_LOG_TRACE_DISP_REFR  @BR2_LV_LOG_TRACE_DISP_REFR@
    #define LV_LOG_TRACE_EVENT      @BR2_LV_LOG_TRACE_EVENT@
    #define LV_LOG_TRACE_OBJ_CREATE @BR2_LV_LOG_TRACE_OBJ_CREATE@
    #define LV_LOG_TRACE_LAYOUT     @BR2_LV_LOG_TRACE_LAYOUT@
    #define LV_LOG_TRACE_ANIM       @BR2_LV_LOG_TRACE_ANIM@

#endif  /*LV_USE_LOG*/

/*-------------
 * Asserts
 *-----------*/

/*Enable asserts if an operation is failed or an invalid data is found.
 *If LV_USE_LOG is enabled an error message will be printed on failure*/
#define LV_USE_ASSERT_NULL          @BR2_LV_USE_ASSERT_NULL@   /*Check if the parameter is NULL. (Very fast, recommended)*/
#define LV_USE_ASSERT_MALLOC        @BR2_LV_USE_ASSERT_MALLOC@   /*Checks is the memory is successfully allocated or no. (Very fast, recommended)*/
#define LV_USE_ASSERT_STYLE         @BR2_LV_USE_ASSERT_STYLE@   /*Check if the styles are properly initialized. (Very fast, recommended)*/
#define LV_USE_ASSERT_MEM_INTEGRITY @BR2_LV_USE_ASSERT_MEM_INTEGRITY@   /*Check the integrity of `lv_mem` after critical operations. (Slow)*/
#define LV_USE_ASSERT_OBJ           @BR2_LV_USE_ASSERT_OBJ@   /*Check the object's type and existence (e.g. not deleted). (Slow)*/

/*Add a custom handler when assert happens e.g. to restart the MCU*/
#define LV_ASSERT_HANDLER_INCLUDE @BR2_LV_ASSERT_HANDLER_INCLUDE@
#define LV_ASSERT_HANDLER assert(0);   /*Halt by default*/

/*-------------
 * Others
 *-----------*/

/*1: Show CPU usage and FPS count*/
#define LV_USE_PERF_MONITOR @BR2_LV_USE_PERF_MONITOR@
#if LV_USE_PERF_MONITOR
    #define LV_USE_PERF_MONITOR_POS @BR2_LV_USE_PERF_MONITOR_POS@
#endif

/*1: Show the used memory and the memory fragmentation
 * Requires LV_MEM_CUSTOM = 0*/
#define LV_USE_MEM_MONITOR @BR2_LV_USE_MEM_MONITOR@
#if LV_USE_MEM_MONITOR
    #define LV_USE_MEM_MONITOR_POS @BR2_LV_USE_MEM_MONITOR_POS@
#endif

/*1: Draw random colored rectangles over the redrawn areas*/
#define LV_USE_REFR_DEBUG @BR2_LV_USE_REFR_DEBUG@

/*Change the built in (v)snprintf functions*/
#define LV_SPRINTF_CUSTOM @BR2_LV_SPRINTF_CUSTOM@
#if LV_SPRINTF_CUSTOM
    #define LV_SPRINTF_INCLUDE @BR2_LV_SPRINTF_INCLUDE@
    #define lv_snprintf  snprintf
    #define lv_vsnprintf vsnprintf
#else   /*LV_SPRINTF_CUSTOM*/
    #define LV_SPRINTF_USE_FLOAT @BR2_LV_SPRINTF_USE_FLOAT@
#endif  /*LV_SPRINTF_CUSTOM*/

#define LV_USE_USER_DATA @BR2_LV_USE_USER_DATA@

/*Garbage Collector settings
 *Used if lvgl is bound to higher level language and the memory is managed by that language*/
#define LV_ENABLE_GC @BR2_LV_ENABLE_GC@
#if LV_ENABLE_GC != 0
    #define LV_GC_INCLUDE @BR2_LV_GC_INCLUDE@                           /*Include Garbage Collector related things*/
#endif /*LV_ENABLE_GC*/

/*=====================
 *  COMPILER SETTINGS
 *====================*/

/*For big endian systems set to 1*/
#define LV_BIG_ENDIAN_SYSTEM @BR2_LV_BIG_ENDIAN_SYSTEM@

/*Define a custom attribute to `lv_tick_inc` function*/
#define LV_ATTRIBUTE_TICK_INC

/*Define a custom attribute to `lv_timer_handler` function*/
#define LV_ATTRIBUTE_TIMER_HANDLER

/*Define a custom attribute to `lv_disp_flush_ready` function*/
#define LV_ATTRIBUTE_FLUSH_READY

/*Required alignment size for buffers*/
#define LV_ATTRIBUTE_MEM_ALIGN_SIZE @BR2_LV_ATTRIBUTE_MEM_ALIGN_SIZE@

/*Will be added where memories needs to be aligned (with -Os data might not be aligned to boundary by default).
 * E.g. __attribute__((aligned(4)))*/
#define LV_ATTRIBUTE_MEM_ALIGN

/*Attribute to mark large constant arrays for example font's bitmaps*/
#define LV_ATTRIBUTE_LARGE_CONST

/*Compiler prefix for a big array declaration in RAM*/
#define LV_ATTRIBUTE_LARGE_RAM_ARRAY

/*Place performance critical functions into a faster memory (e.g RAM)*/
#define LV_ATTRIBUTE_FAST_MEM

/*Prefix variables that are used in GPU accelerated operations, often these need to be placed in RAM sections that are DMA accessible*/
#define LV_ATTRIBUTE_DMA

/*Export integer constant to binding. This macro is used with constants in the form of LV_<CONST> that
 *should also appear on LVGL binding API such as Micropython.*/
#define LV_EXPORT_CONST_INT(int_value) struct _silence_gcc_warning /*The default value just prevents GCC warning*/

/*Extend the default -32k..32k coordinate range to -4M..4M by using int32_t for coordinates instead of int16_t*/
#define LV_USE_LARGE_COORD @BR2_LV_USE_LARGE_COORD@

/*==================
 *   FONT USAGE
 *===================*/

/*Montserrat fonts with ASCII range and some symbols using bpp = 4
 *https://fonts.google.com/specimen/Montserrat*/
#define LV_FONT_MONTSERRAT_8  @BR2_LV_FONT_MONTSERRAT_8@
#define LV_FONT_MONTSERRAT_10 @BR2_LV_FONT_MONTSERRAT_10@
#define LV_FONT_MONTSERRAT_12 @BR2_LV_FONT_MONTSERRAT_12@
#define LV_FONT_MONTSERRAT_14 @BR2_LV_FONT_MONTSERRAT_14@
#define LV_FONT_MONTSERRAT_16 @BR2_LV_FONT_MONTSERRAT_16@
#define LV_FONT_MONTSERRAT_18 @BR2_LV_FONT_MONTSERRAT_18@
#define LV_FONT_MONTSERRAT_20 @BR2_LV_FONT_MONTSERRAT_20@
#define LV_FONT_MONTSERRAT_22 @BR2_LV_FONT_MONTSERRAT_22@
#define LV_FONT_MONTSERRAT_24 @BR2_LV_FONT_MONTSERRAT_24@
#define LV_FONT_MONTSERRAT_26 @BR2_LV_FONT_MONTSERRAT_26@
#define LV_FONT_MONTSERRAT_28 @BR2_LV_FONT_MONTSERRAT_28@
#define LV_FONT_MONTSERRAT_30 @BR2_LV_FONT_MONTSERRAT_30@
#define LV_FONT_MONTSERRAT_32 @BR2_LV_FONT_MONTSERRAT_32@
#define LV_FONT_MONTSERRAT_34 @BR2_LV_FONT_MONTSERRAT_34@
#define LV_FONT_MONTSERRAT_36 @BR2_LV_FONT_MONTSERRAT_36@
#define LV_FONT_MONTSERRAT_38 @BR2_LV_FONT_MONTSERRAT_38@
#define LV_FONT_MONTSERRAT_40 @BR2_LV_FONT_MONTSERRAT_40@
#define LV_FONT_MONTSERRAT_42 @BR2_LV_FONT_MONTSERRAT_42@
#define LV_FONT_MONTSERRAT_44 @BR2_LV_FONT_MONTSERRAT_44@
#define LV_FONT_MONTSERRAT_46 @BR2_LV_FONT_MONTSERRAT_46@
#define LV_FONT_MONTSERRAT_48 @BR2_LV_FONT_MONTSERRAT_48@

/*Demonstrate special features*/
#define LV_FONT_MONTSERRAT_12_SUBPX      @BR2_LV_FONT_MONTSERRAT_12_SUBPX@
#define LV_FONT_MONTSERRAT_28_COMPRESSED @BR2_LV_FONT_MONTSERRAT_28_COMPRESSED@  /*bpp = 3*/
#define LV_FONT_DEJAVU_16_PERSIAN_HEBREW @BR2_LV_FONT_DEJAVU_16_PERSIAN_HEBREW@  /*Hebrew, Arabic, Persian letters and all their forms*/
#define LV_FONT_SIMSUN_16_CJK            @BR2_LV_FONT_SIMSUN_16_CJK@  /*1000 most common CJK radicals*/

/*Pixel perfect monospace fonts*/
#define LV_FONT_UNSCII_8  @BR2_LV_FONT_UNSCII_8@
#define LV_FONT_UNSCII_16 @BR2_LV_FONT_UNSCII_16@

/*Optionally declare custom fonts here.
 *You can use these fonts as default font too and they will be available globally.
 *E.g. #define LV_FONT_CUSTOM_DECLARE   LV_FONT_DECLARE(my_font_1) LV_FONT_DECLARE(my_font_2)*/
#define LV_FONT_CUSTOM_DECLARE

/*Always set a default font*/
#define CONFIG_LV_FONT_DEFAULT_MONTSERRAT_8 @BR2_LV_FONT_DEFAULT_MONTSERRAT_8@
#define CONFIG_LV_FONT_DEFAULT_MONTSERRAT_10 @BR2_LV_FONT_DEFAULT_MONTSERRAT_10@
#define CONFIG_LV_FONT_DEFAULT_MONTSERRAT_12 @BR2_LV_FONT_DEFAULT_MONTSERRAT_12@
#define CONFIG_LV_FONT_DEFAULT_MONTSERRAT_14 @BR2_LV_FONT_DEFAULT_MONTSERRAT_14@
#define CONFIG_LV_FONT_DEFAULT_MONTSERRAT_16 @BR2_LV_FONT_DEFAULT_MONTSERRAT_16@
#define CONFIG_LV_FONT_DEFAULT_MONTSERRAT_18 @BR2_LV_FONT_DEFAULT_MONTSERRAT_18@
#define CONFIG_LV_FONT_DEFAULT_MONTSERRAT_20 @BR2_LV_FONT_DEFAULT_MONTSERRAT_20@
#define CONFIG_LV_FONT_DEFAULT_MONTSERRAT_22 @BR2_LV_FONT_DEFAULT_MONTSERRAT_22@
#define CONFIG_LV_FONT_DEFAULT_MONTSERRAT_24 @BR2_LV_FONT_DEFAULT_MONTSERRAT_24@
#define CONFIG_LV_FONT_DEFAULT_MONTSERRAT_26 @BR2_LV_FONT_DEFAULT_MONTSERRAT_26@
#define CONFIG_LV_FONT_DEFAULT_MONTSERRAT_28 @BR2_LV_FONT_DEFAULT_MONTSERRAT_28@
#define CONFIG_LV_FONT_DEFAULT_MONTSERRAT_30 @BR2_LV_FONT_DEFAULT_MONTSERRAT_30@
#define CONFIG_LV_FONT_DEFAULT_MONTSERRAT_32 @BR2_LV_FONT_DEFAULT_MONTSERRAT_32@
#define CONFIG_LV_FONT_DEFAULT_MONTSERRAT_34 @BR2_LV_FONT_DEFAULT_MONTSERRAT_34@
#define CONFIG_LV_FONT_DEFAULT_MONTSERRAT_36 @BR2_LV_FONT_DEFAULT_MONTSERRAT_36@
#define CONFIG_LV_FONT_DEFAULT_MONTSERRAT_38 @BR2_LV_FONT_DEFAULT_MONTSERRAT_38@
#define CONFIG_LV_FONT_DEFAULT_MONTSERRAT_40 @BR2_LV_FONT_DEFAULT_MONTSERRAT_40@
#define CONFIG_LV_FONT_DEFAULT_MONTSERRAT_42 @BR2_LV_FONT_DEFAULT_MONTSERRAT_42@
#define CONFIG_LV_FONT_DEFAULT_MONTSERRAT_44 @BR2_LV_FONT_DEFAULT_MONTSERRAT_44@
#define CONFIG_LV_FONT_DEFAULT_MONTSERRAT_46 @BR2_LV_FONT_DEFAULT_MONTSERRAT_46@
#define CONFIG_LV_FONT_DEFAULT_MONTSERRAT_48 @BR2_LV_FONT_DEFAULT_MONTSERRAT_48@
#define CONFIG_LV_FONT_DEFAULT_MONTSERRAT_12_SUBPX @BR2_LV_FONT_DEFAULT_MONTSERRAT_12_SUBPX@
#define CONFIG_LV_FONT_DEFAULT_MONTSERRAT_28_COMPRESSED @BR2_LV_FONT_DEFAULT_MONTSERRAT_28_COMPRESSED@
#define CONFIG_LV_FONT_DEFAULT_DEJAVU_16_PERSIAN_HEBREW @BR2_LV_FONT_DEFAULT_DEJAVU_16_PERSIAN_HEBREW@
#define CONFIG_LV_FONT_DEFAULT_SIMSUN_16_CJK @BR2_LV_FONT_DEFAULT_SIMSUN_16_CJK@
#define CONFIG_LV_FONT_DEFAULT_UNSCII_8 @BR2_LV_FONT_DEFAULT_UNSCII_8@
#define CONFIG_LV_FONT_DEFAULT_UNSCII_16 @BR2_LV_FONT_DEFAULT_UNSCII_16@

/*Enable handling large font and/or fonts with a lot of characters.
 *The limit depends on the font size, font face and bpp.
 *Compiler error will be triggered if a font needs it.*/
#define LV_FONT_FMT_TXT_LARGE @BR2_LV_FONT_FMT_TXT_LARGE@

/*Enables/disables support for compressed fonts.*/
#define LV_USE_FONT_COMPRESSED @BR2_LV_USE_FONT_COMPRESSED@

/*Enable subpixel rendering*/
#define LV_USE_FONT_SUBPX @BR2_LV_USE_FONT_SUBPX@
#if LV_USE_FONT_SUBPX
    /*Set the pixel order of the display. Physical order of RGB channels. Doesn't matter with "normal" fonts.*/
    #define LV_FONT_SUBPX_BGR @BR2_LV_FONT_SUBPX_BGR@  /*0: RGB; 1:BGR order*/
#endif

/*Enable drawing placeholders when glyph dsc is not found*/
#define LV_USE_FONT_PLACEHOLDER @BR2_LV_USE_FONT_PLACEHOLDER@

/*=================
 *  TEXT SETTINGS
 *=================*/

/**
 * Select a character encoding for strings.
 * Your IDE or editor should have the same character encoding
 * - LV_TXT_ENC_UTF8
 * - LV_TXT_ENC_ASCII
 */
#define LV_TXT_ENC @BR2_LV_TXT_ENC@

/*Can break (wrap) texts on these chars*/
#define LV_TXT_BREAK_CHARS @BR2_LV_TXT_BREAK_CHARS@

/*If a word is at least this long, will break wherever "prettiest"
 *To disable, set to a value <= 0*/
#define LV_TXT_LINE_BREAK_LONG_LEN @BR2_LV_TXT_LINE_BREAK_LONG_LEN@

/*Minimum number of characters in a long word to put on a line before a break.
 *Depends on LV_TXT_LINE_BREAK_LONG_LEN.*/
#define LV_TXT_LINE_BREAK_LONG_PRE_MIN_LEN @BR2_LV_TXT_LINE_BREAK_LONG_PRE_MIN_LEN@

/*Minimum number of characters in a long word to put on a line after a break.
 *Depends on LV_TXT_LINE_BREAK_LONG_LEN.*/
#define LV_TXT_LINE_BREAK_LONG_POST_MIN_LEN @BR2_LV_TXT_LINE_BREAK_LONG_POST_MIN_LEN@

/*The control character to use for signalling text recoloring.*/
#define LV_TXT_COLOR_CMD @BR2_LV_TXT_COLOR_CMD@

/*Support bidirectional texts. Allows mixing Left-to-Right and Right-to-Left texts.
 *The direction will be processed according to the Unicode Bidirectional Algorithm:
 *https://www.w3.org/International/articles/inline-bidi-markup/uba-basics*/
#define LV_USE_BIDI @BR2_LV_USE_BIDI@
#if LV_USE_BIDI
    /*Set the default direction. Supported values:
    *`LV_BASE_DIR_LTR` Left-to-Right
    *`LV_BASE_DIR_RTL` Right-to-Left
    *`LV_BASE_DIR_AUTO` detect texts base direction*/
    #define LV_BIDI_BASE_DIR_DEF @BR2_LV_BIDI_BASE_DIR_DEF@
#endif

/*Enable Arabic/Persian processing
 *In these languages characters should be replaced with an other form based on their position in the text*/
#define LV_USE_ARABIC_PERSIAN_CHARS @BR2_LV_USE_ARABIC_PERSIAN_CHARS@

/*==================
 *  WIDGET USAGE
 *================*/

/*Documentation of the widgets: https://docs.lvgl.io/latest/en/html/widgets/index.html*/

#define LV_USE_ARC        @BR2_LV_USE_ARC@

#define LV_USE_BAR        @BR2_LV_USE_BAR@

#define LV_USE_BTN        @BR2_LV_USE_BTN@

#define LV_USE_BTNMATRIX  @BR2_LV_USE_BTNMATRIX@

#define LV_USE_CANVAS     @BR2_LV_USE_CANVAS@

#define LV_USE_CHECKBOX   @BR2_LV_USE_CHECKBOX@

#define LV_USE_DROPDOWN   @BR2_LV_USE_DROPDOWN@   /*Requires: lv_label*/

#define LV_USE_INPUTBOX   @BR2_LV_USE_INPUTBOX@

#define LV_USE_IMG        @BR2_LV_USE_IMG@   /*Requires: lv_label*/

#define LV_USE_LABEL      @BR2_LV_USE_LABEL@
#if LV_USE_LABEL
    #define LV_LABEL_TEXT_SELECTION @BR2_LV_LABEL_TEXT_SELECTION@ /*Enable selecting text of the label*/
    #define LV_LABEL_LONG_TXT_HINT @BR2_LV_LABEL_LONG_TXT_HINT@  /*Store some extra info in labels to speed up drawing of very long texts*/
#endif

#define LV_USE_LINE       @BR2_LV_USE_LINE@

#define LV_USE_ROLLER     @BR2_LV_USE_ROLLER@   /*Requires: lv_label*/
#if LV_USE_ROLLER
    #define LV_ROLLER_INF_PAGES @BR2_LV_ROLLER_INF_PAGES@ /*Number of extra "pages" when the roller is infinite*/
#endif

#define LV_USE_SLIDER     @BR2_LV_USE_SLIDER@   /*Requires: lv_bar*/

#define LV_USE_SWITCH     @BR2_LV_USE_SWITCH@

#define LV_USE_TEXTAREA   @BR2_LV_USE_TEXTAREA@   /*Requires: lv_label*/
#if LV_USE_TEXTAREA != 0
    #define LV_TEXTAREA_DEF_PWD_SHOW_TIME @BR2_LV_TEXTAREA_DEF_PWD_SHOW_TIME@    /*ms*/
#endif

#define LV_USE_TABLE      @BR2_LV_USE_TABLE@

/*==================
 * EXTRA COMPONENTS
 *==================*/

/*-----------
 * Widgets
 *----------*/
#define LV_USE_ANIMIMG    @BR2_LV_USE_ANIMIMG@

#define LV_USE_CALENDAR   @BR2_LV_USE_CALENDAR@
#if LV_USE_CALENDAR
    #define LV_CALENDAR_WEEK_STARTS_MONDAY @BR2_LV_CALENDAR_WEEK_STARTS_MONDAY@
    #if LV_CALENDAR_WEEK_STARTS_MONDAY
        #define LV_CALENDAR_DEFAULT_DAY_NAMES {"Mo", "Tu", "We", "Th", "Fr", "Sa", "Su"}
    #else
        #define LV_CALENDAR_DEFAULT_DAY_NAMES {"Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"}
    #endif

    #define LV_CALENDAR_DEFAULT_MONTH_NAMES {"January", "February", "March",  "April", "May",  "June", "July", "August", "September", "October", "November", "December"}
    #define LV_USE_CALENDAR_HEADER_ARROW @BR2_LV_USE_CALENDAR_HEADER_ARROW@
    #define LV_USE_CALENDAR_HEADER_DROPDOWN @BR2_LV_USE_CALENDAR_HEADER_DROPDOWN@
#endif  /*LV_USE_CALENDAR*/

#define LV_USE_CHART      @BR2_LV_USE_CHART@

#define LV_USE_COLORWHEEL @BR2_LV_USE_COLORWHEEL@

#define LV_USE_IMGBTN     @BR2_LV_USE_IMGBTN@

#define LV_USE_KEYBOARD   @BR2_LV_USE_KEYBOARD@

#define LV_USE_LED        @BR2_LV_USE_LED@

#define LV_USE_LIST       @BR2_LV_USE_LIST@

#define LV_USE_MENU       @BR2_LV_USE_MENU@

#define LV_USE_METER      @BR2_LV_USE_METER@

#define LV_USE_MSGBOX     @BR2_LV_USE_MSGBOX@

#define LV_USE_SPAN       @BR2_LV_USE_SPAN@
#if LV_USE_SPAN
    /*A line text can contain maximum num of span descriptor */
    #define LV_SPAN_SNIPPET_STACK_SIZE @BR2_LV_SPAN_SNIPPET_STACK_SIZE@
#endif

#define LV_USE_SPINBOX    @BR2_LV_USE_SPINBOX@

#define LV_USE_SPINNER    @BR2_LV_USE_SPINNER@

#define LV_USE_TABVIEW    @BR2_LV_USE_TABVIEW@

#define LV_USE_TILEVIEW   @BR2_LV_USE_TILEVIEW@

#define LV_USE_WIN        @BR2_LV_USE_WIN@

/*-----------
 * Themes
 *----------*/

/*A simple, impressive and very complete theme*/
#define LV_USE_THEME_DEFAULT @BR2_LV_USE_THEME_DEFAULT@
#if LV_USE_THEME_DEFAULT

    /*0: Light mode; 1: Dark mode*/
    #define LV_THEME_DEFAULT_DARK @BR2_LV_THEME_DEFAULT_DARK@

    /*1: Enable grow on press*/
    #define LV_THEME_DEFAULT_GROW @BR2_LV_THEME_DEFAULT_GROW@

    /*Default transition time in [ms]*/
    #define LV_THEME_DEFAULT_TRANSITION_TIME @BR2_LV_THEME_DEFAULT_TRANSITION_TIME@
#endif /*LV_USE_THEME_DEFAULT*/

/*A very simple theme that is a good starting point for a custom theme*/
#define LV_USE_THEME_BASIC @BR2_LV_USE_THEME_BASIC@

/*A theme designed for monochrome displays*/
#define LV_USE_THEME_MONO @BR2_LV_USE_THEME_MONO@

/*-----------
 * Layouts
 *----------*/

/*A layout similar to Flexbox in CSS.*/
#define LV_USE_FLEX @BR2_LV_USE_FLEX@

/*A layout similar to Grid in CSS.*/
#define LV_USE_GRID @BR2_LV_USE_GRID@

/*---------------------
 * 3rd party libraries
 *--------------------*/

/*File system interfaces for common APIs */

/*API for fopen, fread, etc*/
#define LV_USE_FS_STDIO @BR2_LV_USE_FS_STDIO@
#if LV_USE_FS_STDIO
    #define LV_FS_STDIO_LETTER @BR2_LV_FS_STDIO_LETTER@     /*Set an upper cased letter on which the drive will accessible (e.g. 'A')*/
    #define LV_FS_STDIO_PATH @BR2_LV_FS_STDIO_PATH@         /*Set the working directory. File/directory paths will be appended to it.*/
    #define LV_FS_STDIO_CACHE_SIZE @BR2_LV_FS_STDIO_CACHE_SIZE@    /*>0 to cache this number of bytes in lv_fs_read()*/
#endif

/*API for open, read, etc*/
#define LV_USE_FS_POSIX @BR2_LV_USE_FS_POSIX@
#if LV_USE_FS_POSIX
    #define LV_FS_POSIX_LETTER @BR2_LV_FS_POSIX_LETTER@     /*Set an upper cased letter on which the drive will accessible (e.g. 'A')*/
    #define LV_FS_POSIX_PATH @BR2_LV_FS_POSIX_PATH@         /*Set the working directory. File/directory paths will be appended to it.*/
    #define LV_FS_POSIX_CACHE_SIZE @BR2_LV_FS_POSIX_CACHE_SIZE@    /*>0 to cache this number of bytes in lv_fs_read()*/
#endif

/*API for CreateFile, ReadFile, etc*/
#define LV_USE_FS_WIN32 @BR2_LV_USE_FS_WIN32@
#if LV_USE_FS_WIN32
    #define LV_FS_WIN32_LETTER @BR2_LV_FS_WIN32_LETTER@     /*Set an upper cased letter on which the drive will accessible (e.g. 'A')*/
    #define LV_FS_WIN32_PATH @BR2_LV_FS_WIN32_PATH@         /*Set the working directory. File/directory paths will be appended to it.*/
    #define LV_FS_WIN32_CACHE_SIZE @BR2_LV_FS_WIN32_CACHE_SIZE@    /*>0 to cache this number of bytes in lv_fs_read()*/
#endif

/*API for FATFS (needs to be added separately). Uses f_open, f_read, etc*/
#define LV_USE_FS_FATFS @BR2_LV_USE_FS_FATFS@
#if LV_USE_FS_FATFS
    #define LV_FS_FATFS_LETTER @BR2_LV_FS_FATFS_LETTER@     /*Set an upper cased letter on which the drive will accessible (e.g. 'A')*/
    #define LV_FS_FATFS_CACHE_SIZE @BR2_LV_FS_FATFS_CACHE_SIZE@    /*>0 to cache this number of bytes in lv_fs_read()*/
#endif

/*API for LittleFS (library needs to be added separately). Uses lfs_file_open, lfs_file_read, etc*/
#define LV_USE_FS_LITTLEFS @BR2_LV_USE_FS_LITTLEFS@
#if LV_USE_FS_LITTLEFS
    #define LV_FS_LITTLEFS_LETTER @BR2_LV_FS_LITTLEFS_LETTER@     /*Set an upper cased letter on which the drive will accessible (e.g. 'A')*/
    #define LV_FS_LITTLEFS_CACHE_SIZE @BR2_LV_FS_LITTLEFS_CACHE_SIZE@    /*>0 to cache this number of bytes in lv_fs_read()*/
#endif

/*PNG decoder library*/
#define LV_USE_PNG @BR2_LV_USE_PNG@

/*BMP decoder library*/
#define LV_USE_BMP @BR2_LV_USE_BMP@

/* JPG + split JPG decoder library.
 * Split JPG is a custom format optimized for embedded systems. */
#define LV_USE_SJPG @BR2_LV_USE_SJPG@

/*GIF decoder library*/
#define LV_USE_GIF @BR2_LV_USE_GIF@

/*QR code library*/
#define LV_USE_QRCODE @BR2_LV_USE_QRCODE@

/*FreeType library*/
#define LV_USE_FREETYPE @BR2_LV_USE_FREETYPE@
#if LV_USE_FREETYPE
    /*Memory used by FreeType to cache characters [bytes] (-1: no caching)*/
    #define LV_FREETYPE_CACHE_SIZE @BR2_LV_FREETYPE_CACHE_SIZE@
    #if LV_FREETYPE_CACHE_SIZE >= 0
        /* 1: bitmap cache use the sbit cache, 0:bitmap cache use the image cache. */
        /* sbit cache:it is much more memory efficient for small bitmaps(font size < 256) */
        /* if font size >= 256, must be configured as image cache */
        #define LV_FREETYPE_SBIT_CACHE @BR2_LV_FREETYPE_SBIT_CACHE@
        /* Maximum number of opened FT_Face/FT_Size objects managed by this cache instance. */
        /* (0:use system defaults) */
        #define LV_FREETYPE_CACHE_FT_FACES @BR2_LV_FREETYPE_CACHE_FT_FACES@
        #define LV_FREETYPE_CACHE_FT_SIZES @BR2_LV_FREETYPE_CACHE_FT_SIZES@
    #endif
#endif

/*Tiny TTF library*/
#define LV_USE_TINY_TTF @BR2_LV_USE_TINY_TTF@
#if LV_USE_TINY_TTF
    /*Load TTF data from files*/
    #define LV_TINY_TTF_FILE_SUPPORT @BR2_LV_TINY_TTF_FILE_SUPPORT@
#endif

/*Rlottie library*/
#define LV_USE_RLOTTIE @BR2_LV_USE_RLOTTIE@

/*-----------
 * Others
 *----------*/

/*1: Enable API to take snapshot for object*/
#define LV_USE_SNAPSHOT @BR2_LV_USE_SNAPSHOT@

/*1: Enable Monkey test*/
#define LV_USE_MONKEY @BR2_LV_USE_MONKEY@

/*1: Enable grid navigation*/
#define LV_USE_GRIDNAV @BR2_LV_USE_GRIDNAV@

/*1: Enable lv_obj fragment*/
#define LV_USE_FRAGMENT @BR2_LV_USE_FRAGMENT@

/*1: Support using images as font in label or span widgets */
#define LV_USE_IMGFONT @BR2_LV_USE_IMGFONT@

/*1: Enable a published subscriber based messaging system */
#define LV_USE_MSG @BR2_LV_USE_MSG@

/*1: Enable Pinyin input method*/
/*Requires: lv_keyboard*/
#define LV_USE_IME_PINYIN @BR2_LV_USE_IME_PINYIN@
#if LV_USE_IME_PINYIN
    /*1: Use default thesaurus*/
    /*If you do not use the default thesaurus, be sure to use `lv_ime_pinyin` after setting the thesauruss*/
    #define LV_IME_PINYIN_USE_DEFAULT_DICT @BR2_LV_IME_PINYIN_USE_DEFAULT_DICT@
    /*Set the maximum number of candidate panels that can be displayed*/
    /*This needs to be adjusted according to the size of the screen*/
    #define LV_IME_PINYIN_CAND_TEXT_NUM @BR2_LV_IME_PINYIN_CAND_TEXT_NUM@

    /*Use 9 key input(k9)*/
    #define LV_IME_PINYIN_USE_K9_MODE      @BR2_LV_IME_PINYIN_USE_K9_MODE@
    #if LV_IME_PINYIN_USE_K9_MODE == 1
        #define LV_IME_PINYIN_K9_CAND_TEXT_NUM @BR2_LV_IME_PINYIN_K9_CAND_TEXT_NUM@
    #endif // LV_IME_PINYIN_USE_K9_MODE
#endif

/*==================
* EXAMPLES
*==================*/

/*Enable the examples to be built with the library*/
#define LV_BUILD_EXAMPLES @BR2_LV_BUILD_EXAMPLES@

/*===================
 * DEMO USAGE
 ====================*/

/*Show some widget. It might be required to increase `LV_MEM_SIZE` */
#define LV_USE_DEMO_WIDGETS @BR2_LV_USE_DEMO_WIDGETS@
#if LV_USE_DEMO_WIDGETS
#define LV_DEMO_WIDGETS_SLIDESHOW @BR2_LV_DEMO_WIDGETS_SLIDESHOW@
#endif

/*Demonstrate the usage of encoder and keyboard*/
#define LV_USE_DEMO_KEYPAD_AND_ENCODER @BR2_LV_USE_DEMO_KEYPAD_AND_ENCODER@

/*Benchmark your system*/
#define LV_USE_DEMO_BENCHMARK @BR2_LV_USE_DEMO_BENCHMARK@
#if LV_USE_DEMO_BENCHMARK
/*Use RGB565A8 images with 16 bit color depth instead of ARGB8565*/
#define LV_DEMO_BENCHMARK_RGB565A8 @BR2_LV_DEMO_BENCHMARK_RGB565A8@
#endif

/*Stress test for LVGL*/
#define LV_USE_DEMO_STRESS @BR2_LV_USE_DEMO_STRESS@

/*Music player demo*/
#define LV_USE_DEMO_MUSIC @BR2_LV_USE_DEMO_MUSIC@
#if LV_USE_DEMO_MUSIC
    #define LV_DEMO_MUSIC_SQUARE    @BR2_LV_DEMO_MUSIC_SQUARE@
    #define LV_DEMO_MUSIC_LANDSCAPE @BR2_LV_DEMO_MUSIC_LANDSCAPE@
    #define LV_DEMO_MUSIC_ROUND     @BR2_LV_DEMO_MUSIC_ROUND@
    #define LV_DEMO_MUSIC_LARGE     @BR2_LV_DEMO_MUSIC_LARGE@
    #define LV_DEMO_MUSIC_AUTO_PLAY @BR2_LV_DEMO_MUSIC_AUTO_PLAY@
#endif

/*--END OF LV_CONF_H--*/

#endif /*LV_CONF_H*/

#endif /*End of "Content enable"*/
